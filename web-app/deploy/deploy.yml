---

- hosts: all
  gather_facts: no
  vars_files:
    - conf/secrets.yml

  tasks:
    - name: install host requirements
      become: yes
      apt: name={{ item }} state=present update_cache=yes
      with_items:
        - git
        - nginx
        - linux-image-extra-4.4.0-59-generic
        - linux-image-extra-virtual
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python-pip
    - name: Install docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    - name: add docker apt repository
      become: yes
      apt_repository: repo="deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable state=present"
    - name: install docker
      become: yes
      apt: name=docker-ce state=present update_cache=yes
    - name: install docker-compose
      become: yes
      pip:
        name: docker-compose
    - name: add user to docker group
      become: yes
      user:
        name: "{{ server_user }}"
        group: docker
        append: yes
    - name: create california directory
      become: yes
      file: 
        path: "{{ server_dir }}"
        state: directory
    - name: change california directory
      become: yes
      file:
        path: "{{ server_dir }}"
        owner: "{{ server_user }}"
        group: "{{ server_user }}"
        recurse: yes
    - name: copy nginx template
      become: yes
      template:
        src: templates/nginx.conf
        dest: /etc/nginx/sites-available/default
    - name: copy docker-compose.yml
      become: yes
      template:
        src: templates/docker-compose.yml
        dest: "{{ server_dir }}/docker-compose.yml"
        owner: "{{ server_user }}"
    - name: copy docker-compose.override.yml
      become: yes
      template:
        src: templates/docker-compose.override.yml
        dest: "{{ server_dir }}/docker-compose.override.yml"
        owner: "{{ server_user }}"
    - name: run migrations
      shell: "cd {{ server_dir }} && docker-compose run web rake db:setup"
    - name: run docker up
      become_user: "{{ server_user }}"
      shell: "cd {{ server_dir }} && docker-compose up -d"
    - name: restart nginx
      become: yes
      service: name=nginx state=restarted enabled=yes
